Description: "Create VPC Network, VPC Operation and VPC Workload each with an IGW, NATGW and public and private subnets in 2 AZs using 10.0.0.0/16, 10.1.0.0/16 and 10.2.0.0/16"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "VPC Parameters"
        Parameters:
          - AvailabilityZoneA
          - AvailabilityZoneB
          - Ec2KeyPair

Parameters:
  AvailabilityZoneA:
    Description: Availability Zone 1
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  AvailabilityZoneB:
    Description: Availability Zone 2
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
  Ec2KeyPair:
    Description: Share EC2 Key Pair
    Type: AWS::EC2::KeyPair
    Default: leesantee-key
  AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: 'The ID of the AMI.'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

Resources:
##########################
# VPC Network Resources
  VpcNetwork:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: "VPC Network"

  # Public subnets + its route table
  VpcNetworkPublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcNetwork
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneA
      CidrBlock: "10.0.0.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: "VPC Network Public Subnet AZ1"
      VpcId: !Ref VpcNetwork

  VpcNetworkPublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcNetwork
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneB
      CidrBlock: "10.0.2.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: "VPC Network Public Subnet AZ2"
      VpcId: !Ref VpcNetwork

  VpcNetworkPublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcNetwork
    Properties:
      VpcId: !Ref VpcNetwork
      Tags:
        - Key: Name
          Value: "VPC Network Public Route Table"

  VpcNetworkPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - VpcNetworkPublicSubnetRouteTable
      - VpcNetworkPublicSubnet1
    Properties:
      RouteTableId: !Ref VpcNetworkPublicSubnetRouteTable
      SubnetId: !Ref VpcNetworkPublicSubnet1

  VpcNetworkPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - VpcNetworkPublicSubnetRouteTable
      - VpcNetworkPublicSubnet2
    Properties:
      RouteTableId: !Ref VpcNetworkPublicSubnetRouteTable
      SubnetId: !Ref VpcNetworkPublicSubnet2

  # Private subnets + its route table
  VpcNetworkPrivateSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcNetwork
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneA
      CidrBlock: "10.0.1.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Network Private Subnet AZ1"
      VpcId: !Ref VpcNetwork

  VpcNetworkPrivateSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcNetwork
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneB
      CidrBlock: "10.0.3.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Network Private Subnet AZ2"
      VpcId: !Ref VpcNetwork

  VpcNetworkPrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcNetwork
    Properties:
      VpcId: !Ref VpcNetwork
      Tags:
        - Key: Name
          Value: "VPC Network Private Route Table"

  VpcNetworkPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - VpcNetworkPrivateSubnetRouteTable
      - VpcNetworkPrivateSubnet1
    Properties:
      RouteTableId: !Ref VpcNetworkPrivateSubnetRouteTable
      SubnetId: !Ref VpcNetworkPrivateSubnet1

  VpcNetworkPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - VpcNetworkPrivateSubnetRouteTable
      - VpcNetworkPrivateSubnet2
    Properties:
      RouteTableId: !Ref VpcNetworkPrivateSubnetRouteTable
      SubnetId: !Ref VpcNetworkPrivateSubnet2
      
  # Transit gateway attachment subnet + its route table
  AttachmentSubnetAVpcNetwork:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcNetwork
    Properties:
      VpcId:
        Ref: VpcNetwork
      CidrBlock: "10.0.5.0/28"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Network TGW Subnet AZ1"

  AttachmentSubnetBVpcNetwork:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcNetwork
    Properties:
      VpcId:
        Ref: VpcNetwork
      CidrBlock: "10.0.5.16/28"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Network TGW Subnet AZ2"

  AttachmentSubnetRouteTableVpcNetwork:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcNetwork
    Properties:
      VpcId:
        Ref: VpcNetwork
      Tags:
        - Key: Name
          Value: "VPC Network TGW Route Table"

  AttachmentASubnetRouteTableAssociationVpcNetwork:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - AttachmentSubnetRouteTableVpcNetwork
      - AttachmentSubnetAVpcNetwork
    Properties:
      RouteTableId:
        Ref: AttachmentSubnetRouteTableVpcNetwork
      SubnetId:
        Ref: AttachmentSubnetAVpcNetwork

  AttachmentBSubnetRouteTableAssociationVpcNetwork:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - AttachmentSubnetRouteTableVpcNetwork
      - AttachmentSubnetBVpcNetwork
    Properties:
      RouteTableId:
        Ref: AttachmentSubnetRouteTableVpcNetwork
      SubnetId:
        Ref: AttachmentSubnetBVpcNetwork

  # NACL 
  VpcNetworkWorkloadSubnetsNacl:
    Type: AWS::EC2::NetworkAcl
    DependsOn: VpcNetwork
    Properties:
      VpcId: !Ref VpcNetwork
      Tags:
        - Key: Name
          Value: "VPC Network Workload Subnets NACL"

  VpcNetworkWorkloadSubnetsNaclInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref VpcNetworkWorkloadSubnetsNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  VpcNetworkWorkloadSubnetsNaclOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref VpcNetworkWorkloadSubnetsNacl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  VpcNetworkAclAssociationPublicSubnet1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn: 
      - VpcNetworkPublicSubnet1
      - VpcNetworkWorkloadSubnetsNacl
    Properties:
      SubnetId: !Ref VpcNetworkPublicSubnet1
      NetworkAclId: !Ref VpcNetworkWorkloadSubnetsNacl

  VpcNetworkNetworkAclAssociationPublicSubnet2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn: 
      - VpcNetworkPublicSubnet2
      - VpcNetworkWorkloadSubnetsNacl
    Properties:
      SubnetId: !Ref VpcNetworkPublicSubnet2
      NetworkAclId: !Ref VpcNetworkWorkloadSubnetsNacl

  VpcNetworkNetworkAclAssociationPrivateSubnet1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn: 
      - VpcNetworkPrivateSubnet1
      - VpcNetworkWorkloadSubnetsNacl
    Properties:
      SubnetId: !Ref VpcNetworkPrivateSubnet1
      NetworkAclId: !Ref VpcNetworkWorkloadSubnetsNacl

  VpcNetworkNetworkAclAssociationPrivateSubnet2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn: 
      - VpcNetworkPrivateSubnet2
      - VpcNetworkWorkloadSubnetsNacl
    Properties:
      SubnetId: !Ref VpcNetworkPrivateSubnet2
      NetworkAclId: !Ref VpcNetworkWorkloadSubnetsNacl

  # Internet Gateway
  VpcNetworkInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "VPC Network IGW"

  VpcNetworkInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - VpcNetwork
      - VpcNetworkInternetGateway
    Properties:
      VpcId: !Ref VpcNetwork
      InternetGatewayId: !Ref VpcNetworkInternetGateway

  VpcNetworkDirectInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: 
      - VpcNetworkInternetGateway
      - VpcNetworkPublicSubnetRouteTable
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VpcNetworkInternetGateway
      RouteTableId: !Ref VpcNetworkPublicSubnetRouteTable

  # NAT Gateway
  VpcNetworkNatEip:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  VpcNetworkNatGateway:
    Type: "AWS::EC2::NatGateway"
    DependsOn: 
      - VpcNetworkPublicSubnet1
      - VpcNetworkNatEip
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VpcNetworkNatEip
          - AllocationId
      SubnetId: !Ref VpcNetworkPublicSubnet1
      Tags:
        - Key: Name
          Value: "VPC Network NATGW"

  VpcNetworkNatInternetRoutePrivate:
    Type: AWS::EC2::Route
    DependsOn: 
      - VpcNetworkNatGateway
      - VpcNetworkPrivateSubnetRouteTable
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VpcNetworkNatGateway
      RouteTableId: !Ref VpcNetworkPrivateSubnetRouteTable

  # Security Group
  VpcNetworkEc2SecGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: VpcNetwork
    Properties:
      GroupDescription: Open-up ports for ICMP
      GroupName: "VPC Network Security Group"
      VpcId: !Ref VpcNetwork
      SecurityGroupIngress:
        - IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: -1
          ToPort: -1

  # EC2
  VpcNetworkPublicServerEc2:
    Type: AWS::EC2::Instance
    DependsOn: 
      - VpcNetworkEc2SecGroup
      - VpcNetworkPublicSubnet2
    Properties:
      IamInstanceProfile: "LeeSanTeeWorkshop1InstanceProfile"
      ImageId: !Ref AMI
      KeyName: !Ref Ec2KeyPair
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref VpcNetworkEc2SecGroup
          PrivateIpAddress: 10.0.2.100
          SubnetId: !Ref VpcNetworkPublicSubnet2
      Tags:
        - Key: Name
          Value: "VPC Network Public AZ2 Server"

  VpcNetworkPrivateServerEc2:
    Type: AWS::EC2::Instance
    DependsOn: 
      - VpcNetworkEc2SecGroup
      - VpcNetworkPrivateSubnet1
    Properties:
      SubnetId: !Ref VpcNetworkPrivateSubnet1
      ImageId: !Ref AMI
      KeyName: !Ref Ec2KeyPair
      InstanceType: t2.micro
      PrivateIpAddress: 10.0.1.100
      SecurityGroupIds:
        - Ref: VpcNetworkEc2SecGroup
      IamInstanceProfile: "LeeSanTeeWorkshop1InstanceProfile"
      Tags:
        - Key: Name
          Value: "VPC Network Private AZ1 Server"

  # VPC Endpoints
  EndpointS3:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: VpcNetworkPrivateSubnetRouteTable
    Properties:
      RouteTableIds:
        - !Ref VpcNetworkPrivateSubnetRouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: 'Gateway'
      VpcId: !Ref VpcNetwork

  EndpointKMS:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: 
      - VpcNetworkPrivateSubnet1
      - VpcNetworkPrivateSubnet2
    Properties: 
      PrivateDnsEnabled: True
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.kms'
      SubnetIds: 
        - !Ref VpcNetworkPrivateSubnet1
        - !Ref VpcNetworkPrivateSubnet2
      VpcEndpointType: 'Interface'
      VpcId: !Ref VpcNetwork

##########################
# VPC Operation Resources (NOT YET)
  VpcOperation:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.1.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: "VPC Operation"

  # Database subnet + its route table
  DatabaseSubnet1VpcOperation:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      CidrBlock: "10.1.0.0/24"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      Tags:
        - Key: Name
          Value: "VPC Operation Database Subnet AZ1"

  DatabaseSubnet2VpcOperation:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      CidrBlock: "10.1.2.0/24"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      Tags:
        - Key: Name
          Value: "VPC Operation Database Subnet AZ2"

  DatabaseSubnetRouteTableVpcOperation:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      Tags:
        - Key: Name
          Value: "VPC Operation Database Private Route Table"

  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - DatabaseSubnetRouteTableVpcOperation
      - DatabaseSubnet1VpcOperation
    Properties:
      RouteTableId:
        Ref: DatabaseSubnetRouteTableVpcOperation
      SubnetId:
        Ref: DatabaseSubnet1VpcOperation

  DatabaseSubnet2RouteTableAssociationVpcOperation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - DatabaseSubnetRouteTableVpcOperation
      - DatabaseSubnet2VpcOperation
    Properties:
      RouteTableId:
        Ref: DatabaseSubnetRouteTableVpcOperation
      SubnetId:
        Ref: DatabaseSubnet2VpcOperation

  # Private subnet + its route table
  PrivateSubnet1VpcOperation:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      CidrBlock: "10.1.1.0/20"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Operation Private Subnet AZ1"

  PrivateSubnet2VpcOperation:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      CidrBlock: "10.1.3.0/20"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Operation Private Subnet AZ2"

  PrivateSubnetRouteTableVpcOperation:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      Tags:
        - Key: Name
          Value: "VPC Operation Private Route Table"

  PrivateASubnetRouteTableAssociationVpcOperation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - PrivateSubnetRouteTableVpcOperation
      - PrivateSubnet1VpcOperation
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTableVpcOperation
      SubnetId:
        Ref: PrivateSubnet1VpcOperation

  PrivateBSubnetRouteTableAssociationVpcOperation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - PrivateSubnetRouteTableVpcOperation
      - PrivateSubnet2VpcOperation
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTableVpcOperation
      SubnetId:
        Ref: PrivateSubnet2VpcOperation

  # Transit gateway attachment subnet + its route table
  AttachmentSubnetAVpcOperation:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      CidrBlock: "10.1.5.0/28"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Operation TGW Subnet AZ1"

  AttachmentSubnetBVpcOperation:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      CidrBlock: "10.1.5.16/28"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "VPC Operation TGW Subnet AZ2"

  AttachmentSubnetRouteTableVpcOperation:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcOperation
    Properties:
      VpcId:
        Ref: VpcOperation
      Tags:
        - Key: Name
          Value: "VPC Operation TGW Route Table"

  AttachmentASubnetRouteTableAssociationVpcOperation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - AttachmentSubnetRouteTableVpcOperation
      - AttachmentSubnetAVpcOperation
    Properties:
      RouteTableId:
        Ref: AttachmentSubnetRouteTableVpcOperation
      SubnetId:
        Ref: AttachmentSubnetAVpcOperation

  AttachmentBSubnetRouteTableAssociationVpcOperation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - AttachmentSubnetRouteTableVpcOperation
      - AttachmentSubnetBVpcOperation
    Properties:
      RouteTableId:
        Ref: AttachmentSubnetRouteTableVpcOperation
      SubnetId:
        Ref: AttachmentSubnetBVpcOperation

  # NACL
  NetworkAclAttachmentSubnetsVpcOperation:
    Type: AWS::EC2::NetworkAcl
    DependsOn: VpcOperation
    Properties:
      VpcId: !Ref VpcOperation
      Tags:
        - Key: Name
          Value: "VPC Operation TGW Subnet NACL"

  NetworkAclAttachmentSubnetsInboundRuleVpcOperation:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: NetworkAclAttachmentSubnetsVpcOperation
    Properties:
      NetworkAclId: !Ref NetworkAclAttachmentSubnetsVpcOperation
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  NetworkAclAttachmentSubnetsOutboundRuleVpcOperation:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: NetworkAclAttachmentSubnetsVpcOperation
    Properties:
      NetworkAclId: !Ref NetworkAclAttachmentSubnetsVpcOperation
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  SubnetNetworkAclAssociationAttachmentSubnetAVpcOperation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - AttachmentSubnetAVpcOperation
      - NetworkAclAttachmentSubnetsVpcOperation
    Properties:
      SubnetId: !Ref AttachmentSubnetAVpcOperation
      NetworkAclId: !Ref NetworkAclAttachmentSubnetsVpcOperation

  SubnetNetworkAclAssociationAttachmentSubnetBVpcOperation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - AttachmentSubnetBVpcOperation
      - NetworkAclAttachmentSubnetsVpcOperation
    Properties:
      SubnetId: !Ref AttachmentSubnetBVpcOperation
      NetworkAclId: !Ref NetworkAclAttachmentSubnetsVpcOperation

  # Security Group
  VpcOperationEc2SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for ICMP from 10.x.x.x
      GroupName: "VPC Operation Security Group"
      VpcId:
        Ref: VpcOperation
      SecurityGroupIngress:
        - IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: -1
          ToPort: -1
        - IpProtocol: tcp
          FromPort: 5201
          ToPort: 5201
          CidrIp: 10.0.0.0/8

  # EC2
  ServerEc2VpcOperation:
    Type: AWS::EC2::Instance
    DependsOn: 
      - PrivateSubnet1VpcOperation
      - VpcOperationEc2SecGroup
    Properties:
      SubnetId:
        Ref: PrivateSubnet1VpcOperation
      ImageId: !Ref AMI
      KeyName: !Ref Ec2KeyPair
      InstanceType: t2.micro
      PrivateIpAddress: 10.1.1.100
      SecurityGroupIds:
        - Ref: VpcOperationEc2SecGroup
      IamInstanceProfile: "LeeSanTeeWorkshop1InstanceProfile"
      Tags:
        - Key: Name
          Value: "VPC Operation Private AZ1 Server"

##########################
# VPC Workload Resources
  VpcWorkload:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.2.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: "VPC Workload"

  # Database subnet + its route table
  DatabaseSubnet1VpcWorkload:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      CidrBlock: "10.2.0.0/24"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      Tags:
        - Key: Name
          Value: "VPC Workload Database Subnet AZ1"

  DatabaseSubnet2VpcWorkload:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      CidrBlock: "10.2.2.0/24"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      Tags:
        - Key: Name
          Value: "VPC Workload Databse Subnet AZ2"

  DatabaseSubnetRouteTableVpcWorkload:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      Tags:
        - Key: Name
          Value: "VPC Workload Database Route Table"

  DatabaseSubnet1RouteTableAssociationVpcWorkload:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - DatabaseSubnetRouteTableVpcWorkload
      - DatabaseSubnet1VpcWorkload
    Properties:
      RouteTableId:
        Ref: DatabaseSubnetRouteTableVpcWorkload
      SubnetId:
        Ref: DatabaseSubnet1VpcWorkload

  DatabaseSubnet2RouteTableAssociationVpcWorkload:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - DatabaseSubnetRouteTableVpcWorkload
      - DatabaseSubnet2VpcWorkload
    Properties:
      RouteTableId:
        Ref: DatabaseSubnetRouteTableVpcWorkload
      SubnetId:
        Ref: DatabaseSubnet2VpcWorkload

  PrivateSubnet1VpcWorkload:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      CidrBlock: "10.2.1.0/20"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      Tags:
        - Key: Name
          Value: "VPC Workload Private Subnet AZ1"

  PrivateSubnet2VpcWorkload:
    Type: AWS::EC2::Subnet
    DependsOn: 
      - VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      CidrBlock: "10.2.3.0/20"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      Tags:
        - Key: Name
          Value: "VPC Workload Private Subnet AZ2"

  PrivateSubnetRouteTableVpcWorkload:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      Tags:
        - Key: Name
          Value: "VPC Workload Private Route Table"

  PrivateASubnetRouteTableAssociationVpcWorkload:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - PrivateSubnetRouteTableVpcWorkload
      - PrivateSubnet1VpcWorkload
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTableVpcWorkload
      SubnetId:
        Ref: PrivateSubnet1VpcWorkload

  PrivateBSubnetRouteTableAssociationVpcWorkload:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - PrivateSubnetRouteTableVpcWorkload
      - PrivateSubnet2VpcWorkload
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTableVpcWorkload
      SubnetId:
        Ref: PrivateSubnet2VpcWorkload

  # Transit Gateway Subnet + its route tablee
  AttachmentSubnetAVpcWorkload:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      CidrBlock: "10.2.5.0/28"
      AvailabilityZone:
        Ref: AvailabilityZoneA
      Tags:
        - Key: Name
          Value: "VPC Workload TGW Subnet AZ1"

  AttachmentSubnetBVpcWorkload:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      CidrBlock: "10.2.5.16/28"
      AvailabilityZone:
        Ref: AvailabilityZoneB
      Tags:
        - Key: Name
          Value: "VPC Workload TGW Subnet AZ2"

  AttachmentSubnetRouteTableVpcWorkload:
    Type: AWS::EC2::RouteTable
    DependsOn: VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      Tags:
        - Key: Name
          Value: "VPC Workload TGW Route Table"

  AttachmentASubnetRouteTableAssociationVpcWorkload:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - AttachmentSubnetRouteTableVpcWorkload
      - AttachmentSubnetAVpcWorkload
    Properties:
      RouteTableId:
        Ref: AttachmentSubnetRouteTableVpcWorkload
      SubnetId:
        Ref: AttachmentSubnetAVpcWorkload

  AttachmentBSubnetRouteTableAssociationVpcWorkload:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - AttachmentSubnetRouteTableVpcWorkload
      - AttachmentSubnetBVpcWorkload
    Properties:
      RouteTableId:
        Ref: AttachmentSubnetRouteTableVpcWorkload
      SubnetId:
        Ref: AttachmentSubnetBVpcWorkload

  # NACL
  NetworkAclAttachmentSubnetsVpcWorkload:
    Type: AWS::EC2::NetworkAcl
    DependsOn: VpcWorkload
    Properties:
      VpcId:
        Ref: VpcWorkload
      Tags:
      - Key: Name
        Value: "VPC Workload TGW Subnet NACL"

  NetworkAclAttachmentSubnetsInboundRuleVpcWorkload:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: NetworkAclAttachmentSubnetsVpcWorkload
    Properties:
      NetworkAclId: !Ref NetworkAclAttachmentSubnetsVpcWorkload
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  NetworkAclAttachmentSubnetsOutboundRuleVpcWorkload:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: NetworkAclAttachmentSubnetsVpcWorkload
    Properties:
      NetworkAclId: !Ref NetworkAclAttachmentSubnetsVpcWorkload
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  SubnetNetworkAclAssociationAttachmentSubnetAVpcWorkload:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn: 
      - AttachmentSubnetAVpcWorkload
      - NetworkAclAttachmentSubnetsVpcWorkload
    Properties:
      SubnetId:
        Ref: AttachmentSubnetAVpcWorkload
      NetworkAclId:
        Ref: NetworkAclAttachmentSubnetsVpcWorkload

  SubnetNetworkAclAssociationAttachmentSubnetBVpcWorkload:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn: 
      - AttachmentSubnetBVpcWorkload
      - NetworkAclAttachmentSubnetsVpcWorkload
    Properties:
      SubnetId:
        Ref: AttachmentSubnetBVpcWorkload
      NetworkAclId:
        Ref: NetworkAclAttachmentSubnetsVpcWorkload

  VpcWorkloadEc2SecGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: VpcWorkload
    Properties:
      GroupDescription: Open-up ports for ICMP from 10.x.x.x
      GroupName: "VPC Workload Security Group"
      VpcId:
        Ref: VpcWorkload
      SecurityGroupIngress:
        - IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: -1
          ToPort: -1

  ServerEc2VpcWorkload:
    Type: AWS::EC2::Instance
    DependsOn: 
      - PrivateSubnet1VpcWorkload
      - VpcWorkloadEc2SecGroup
    Properties:
      SubnetId:
        Ref: PrivateSubnet1VpcWorkload
      ImageId: !Ref AMI
      InstanceType: t2.micro
      PrivateIpAddress: 10.2.1.100
      SecurityGroupIds:
        - Ref: VpcWorkloadEc2SecGroup
      IamInstanceProfile: "LeeSanTeeWorkshop1InstanceProfile"
      Tags:
        - Key: Name
          Value: "VPC Workload Private AZ1 Server"

Outputs:
  # VPC Network Outputs
  VpcNetwork:
    Description: "The Created VPC"
    Value: !Ref VpcNetwork
    Export:
      Name: !Sub "VpcNetworkId"
  VpcNetworkPublicServerPublicIp:
    Description: "VPC Network Public EC2 Public IP address"
    Value: !GetAtt VpcNetworkPublicServerEc2.PublicIp
    Export:
      Name: !Sub "VpcNetworkPublicServerPublicIP"
  VpcNetworkPublicServerPrivateIp:
    Description: "VPC Network Public EC2 Private IP address"
    Value: !GetAtt VpcNetworkPublicServerEc2.PrivateIp
    Export:
      Name: !Sub "VpcNetworkPublicServerPrivateIP"
  VpcNetworkPrivateServer:
    Description: "VPC Network Private EC2 IP address"
    Value: !GetAtt ServerEc2VpcOperation.PrivateIp
    Export:
      Name: !Sub "VpcNetworkServerIP"
  VpcNetworkPublicSubnet1:
    Description: "VPC Network Public Subnet AZ1"
    Value: !Ref VpcNetworkPublicSubnet1
    Export:
      Name: !Sub "VpcNetworkPublicSubnetAZ1"
  VpcNetworkPublicSubnet2:
    Description: "VPC Network Public Subnet AZ2"
    Value: !Ref VpcNetworkPublicSubnet2
    Export:
      Name: !Sub "VpcNetworkPublicSubnetAZ2"
  VpcNetworkPrivateSubnet1:
    Description: "VPC Network Private Subnet AZ1"
    Value: !Ref VpcNetworkPrivateSubnet1
    Export:
      Name: !Sub "VpcNetworkPrivateSubnetAZ1"
  VpcNetworkPrivateSubnet2:
    Description: "VPC Network Private Subnet AZ2"
    Value: !Ref VpcNetworkPrivateSubnet2
    Export:
      Name: !Sub "VpcNetworkPrivateSubnetAZ2"
  VpcNetworkPrivateSubnetRouteTable:
    Description: "VPC Network Private Route Table"
    Value: !Ref VpcNetworkPrivateSubnetRouteTable
    Export:
      Name: !Sub "VpcNetworkPrivateSubnetRouteTable"
  VpcNetworkPublicSubnetRouteTable:
    Description: "VPC Network Public Route Table"
    Value: !Ref VpcNetworkPublicSubnetRouteTable
    Export:
      Name: !Sub "VpcNetworkPublicRouteTable"

  # VPC Operation Outputs
  VpcOperation:
    Description: "The Created VPC"
    Value: !Ref VpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-VPC"
  ServerVpcOperation:
    Description: "VpcOperation1 EC2 IP address"
    Value: !GetAtt ServerEc2VpcOperation.PrivateIp
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-ServerIP"
  DatabaseSubnet1VpcOperation:
    Description: "VpcOperation Database Subnet A"
    Value: !Ref DatabaseSubnet1VpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-DatabaseSubnet1"
  DatabaseSubnet2VpcOperation:
    Description: "VpcOperation Database Subnet B"
    Value: !Ref DatabaseSubnet2VpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-DatabaseSubnet2"
  PrivateSubnet1VpcOperation:
    Description: "VpcOperation Private Subnet A"
    Value: !Ref PrivateSubnet1VpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-PrivateSubnet1"
  PrivateSubnet2VpcOperation:
    Description: "VpcOperation Private Subnet B"
    Value: !Ref PrivateSubnet2VpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-PrivateSubnet2"
  PrivateSubnetRouteTableVpcOperation:
    Description: "VpcOperation Private Route Table"
    Value: !Ref PrivateSubnetRouteTableVpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-PrivateRouteTable"
  DatabaseSubnetRouteTableVpcOperation:
    Description: "VpcOperation Database Route Table"
    Value: !Ref DatabaseSubnetRouteTableVpcOperation
    Export:
      Name: !Sub "VpcOperation-${AWS::StackName}-DatabaseRouteTable"
      
  # VPC Workload Outputs
  VpcWorkload:
    Description: "Datacenter Services VPC"
    Value: !Ref VpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-VPC"
  ServerVpcWorkload:
    Description: "VpcWorkload EC2 IP address"
    Value: !GetAtt ServerEc2VpcWorkload.PrivateIp
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-ServerIP"
  DatabaseSubnet1VpcWorkload:
    Description: "VpcWorkload Database Subnet A"
    Value: !Ref DatabaseSubnet1VpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-DatabaseSubnet1"
  DatabaseSubnet2VpcWorkload:
    Description: "VpcWorkload Database Subnet B"
    Value: !Ref DatabaseSubnet2VpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-DatabaseSubnet2"
  PrivateSubnet1VpcWorkload:
    Description: "VpcWorkload Private Subnet A"
    Value: !Ref PrivateSubnet1VpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-PrivateSubnet1"
  PrivateSubnet2VpcWorkload:
    Description: "VpcWorkload Private Subnet B"
    Value: !Ref PrivateSubnet2VpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-PrivateSubnet2"
  PrivateSubnetRouteTableVpcWorkload:
    Description: "VpcWorkload Private Route Table"
    Value: !Ref PrivateSubnetRouteTableVpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-PrivateRouteTable"
  DatabaseSubnetRouteTableVpcWorkload:
    Description: "VpcWorkload Database Route Table"
    Value: !Ref DatabaseSubnetRouteTableVpcWorkload
    Export:
      Name: !Sub "VpcWorkload-${AWS::StackName}-DatabaseRouteTable"